# docker-compose.yml  – minimalni, validni skeleton
# (Flower je zakomentiran; odkomentiraj ako stvarno trebaš)

services:
  db:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_DB: erp
      POSTGRES_USER: erp
      POSTGRES_PASSWORD: erp
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 10s
      retries: 5

  redis:
    image: redis:7
    restart: unless-stopped

  web:
    build: .
    working_dir: /code
    restart: unless-stopped
    command: >
      sh -c "python manage.py migrate &&
             gunicorn erp_system.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - .:/code
    env_file:
      - .env.dev
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/code
      - DJANGO_SETTINGS_MODULE=erp_system.settings.dev
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  worker:
    build: .
    working_dir: /code
    restart: unless-stopped
    command: celery -A erp_system worker -l info
    volumes:
      - .:/code
    env_file:
      - .env.dev
    environment:
      - PYTHONPATH=/code
    depends_on:
      - redis
      - db

  beat:
    build: .
    working_dir: /code
    restart: unless-stopped
    command: celery -A erp_system beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/code
    env_file:
      - .env.dev
    environment:
      - PYTHONPATH=/code
    depends_on:
      - redis
      - db

  flower:
    build: .
    working_dir: /code
    volumes:
      - .:/code
    image: mher/flower
    restart: unless-stopped
    command: celery -A erp_system flower --port=5555
    env_file:
      - .env.dev
    environment:
      - PYTHONPATH=/code
    depends_on:
      - redis
    ports:
      - "5555:5555"

volumes:
  db-data:
